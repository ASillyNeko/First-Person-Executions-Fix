global function FirstPersonSequenceForce1P_Init
global function FirstPersonSequenceForce1P_InitPlaylistVars

#if SERVER
	global function FirstPersonSequenceForce1P
#endif

#if CLIENT
	global function ServerCallback_HideHudForFPHackAnim
#endif

global const string FORCE1P_PILOT_1P_ATTACHMENT = "HEADFOCUS"
global const string FORCE1P_TITAN_1P_ATTACHMENT = "HATCH_HEAD"

global const string FORCE1P_PILOT_1P_HIDDEN_BODYGROUP = "head"
global const string FORCE1P_TITAN_1P_HIDDEN_BODYGROUP = "torso"

global const string FORCE1P_PILOT_ENTITYCLASS = "npc_pilot_elite"
global const string FORCE1P_TITAN_ENTITYCLASS = "npc_titan"

global struct Forced1PSequenceData
{
	entity player
	entity camera
	entity ownerProxy
	entity thirdPersonProxy
}

void function FirstPersonSequenceForce1P_Init()
{
	#if SERVER
	AddCallback_OnReceivedSayTextMessage( ChatCallback )
	AddCallback_OnClientConnected( OnClientConnected )
	#endif
	AddCallback_OnRegisteringCustomNetworkVars( FirstPersonSequenceForce1P_RegisterCustomNetworkFunctions )
}

void function FirstPersonSequenceForce1P_InitPlaylistVars()
{
	AddPrivateMatchModeSettingEnum( "#MODE_SETTING_CATEGORY_RIFF", "fp_embark_enabled", [ "#SETTING_DISABLED", "#SETTING_ENABLED" ], "0" )
}

void function FirstPersonSequenceForce1P_RegisterCustomNetworkFunctions()
{
	Remote_RegisterFunction( "ServerCallback_HideHudForFPHackAnim" )
}

#if SERVER
Forced1PSequenceData function FirstPersonSequenceForce1P( FirstPersonSequenceStruct sequence, entity player, entity other = null )
{
	Forced1PSequenceData cleanupData
	/*
	Here For Development Purposes And To See What Model The Player Was Using If The Server Crashes Because Of The Model
	*/
	if ( player.IsPlayer() )
		print( "[FirstPersonExecution] " + player.GetPlayerName() + "'s Model " + player.GetModelName() )
	if ( player.IsNPC() )
		print( "[FirstPersonExecution] " + player.GetTitle() + "'s Model " + player.GetModelName() )
	if ( !player.IsPlayer() || (split( GetConVarString( "fp_executions_disabled_uids" ), "," ).contains( player.GetUID() ) && GetConVarInt( "fp_executions_disable_enabled" )) )
		return cleanupData

	string attachment = FORCE1P_PILOT_1P_ATTACHMENT
	string hiddenBodygroup = FORCE1P_PILOT_1P_HIDDEN_BODYGROUP
	string entityclass = FORCE1P_PILOT_ENTITYCLASS

	if ( player.IsTitan() )
	{
		attachment = FORCE1P_TITAN_1P_ATTACHMENT
		hiddenBodygroup = FORCE1P_TITAN_1P_HIDDEN_BODYGROUP
		entityclass = FORCE1P_TITAN_ENTITYCLASS
	}

	player.Hide()

	cleanupData.player = player

	vector angles = player.GetAngles()
	angles.y = player.EyeAngles().y
	int maxyaw = 359
	entity ownerProxy
	if ( entityclass != "npc_titan" )
		ownerProxy = CreateEntity( entityclass )
	else
		ownerProxy = CreateNPCTitan( player.GetPlayerSettings(), player.GetTeam(), <0, 0, 0>, <0, 0, 0> )
	if ( IsValid( ownerProxy ) )
	{
		if ( ownerProxy.GetModelName() != player.GetModelName() )
			ownerProxy.SetModel( player.GetModelName() )
		ownerProxy.SetOrigin( player.GetOrigin() )
		if ( Distance( angles, angles ) < maxyaw ) // Crashes server if yaw is over 360
			ownerProxy.SetAngles( angles )
		ownerProxy.kv.VisibilityFlags = ENTITY_VISIBLE_TO_OWNER
		ownerProxy.kv.solid = 0
		SetTeam( ownerProxy, player.GetTeam() )
		ownerProxy.SetOwner( player )
		ownerProxy.SetSkin( player.GetSkin() )
		ownerProxy.SetCamo( player.GetCamo() )
		ownerProxy.SetDecal( player.GetDecal() )
		DispatchSpawn( ownerProxy )
		if ( ownerProxy.GetModelName() != player.GetModelName() )
			ownerProxy.SetModel( player.GetModelName() )
		ownerProxy.SetInvulnerable()
		ownerProxy.EnableNPCFlag( NPC_IGNORE_ALL )
		NPC_NoTarget( ownerProxy )
		SetTeam( ownerProxy, player.GetTeam() )
		ownerProxy.SetSkin( player.GetSkin() )
		ownerProxy.SetCamo( player.GetCamo() )
		ownerProxy.SetDecal( player.GetDecal() )
		if ( ownerProxy.GetMainWeapons().len() != 0 )
			TakeWeaponsForArray( ownerProxy, ownerProxy.GetMainWeapons() )
		ownerProxy.SetBossPlayer( player )
		if ( player.IsTitan() )
		{
			entity ownerProxysoul = ownerProxy.GetTitanSoul()
			if ( IsValid( ownerProxysoul ) )
				ownerProxysoul.SetShieldHealth( ownerProxysoul.GetShieldHealthMax() )
		}
		else
		{
			AddAnimEvent( ownerProxy, "phase_shift_start", ModdedPhaseEmbarkPhaseStart )
			AddAnimEvent( ownerProxy, "phase_shift_stop", ModdedPhaseEmbarkPhaseStop )
			if ( !IsPlayerEmbarking( player ) )
			{
				AddAnimEvent( ownerProxy, "phase_shift_explode", ModdedPhaseShiftExplodeSound )
				AddAnimEvent( ownerProxy, "cloak_on", ModdedAnimEvent_Cloak_On )
				AddAnimEvent( ownerProxy, "cloak_off", ModdedAnimEvent_Cloak_Off )
			}
		}
		HideName( ownerProxy )

		int bodygroupValue = 1
		if ( hiddenBodygroup == "torso" )
			bodygroupValue = 2

		if ( player.GetModelName() != $"models/robots/spectre/imc_spectre.mdl" && player.GetModelName() != $"models/titans/buddy/titan_buddy.mdl" )
			ownerProxy.SetBodygroup( ownerProxy.FindBodyGroup( hiddenBodygroup ), bodygroupValue )
	}
	cleanupData.ownerProxy = ownerProxy

	entity thirdPersonProxy
	if ( entityclass != "npc_titan" )
		thirdPersonProxy = CreateEntity( entityclass )
	else
		thirdPersonProxy = CreateNPCTitan( player.GetPlayerSettings(), player.GetTeam(), <0, 0, 0>, <0, 0, 0> )
	if ( IsValid( thirdPersonProxy ) )
	{
		if ( thirdPersonProxy.GetModelName() != player.GetModelName() )
			thirdPersonProxy.SetModel( player.GetModelName() )
		thirdPersonProxy.SetOrigin( player.GetOrigin() )
		if ( Distance( angles, angles ) < maxyaw ) // Crashes server if yaw is over 360
			thirdPersonProxy.SetAngles( angles )
		thirdPersonProxy.kv.VisibilityFlags = ENTITY_VISIBLE_TO_EVERYONE & ~ENTITY_VISIBLE_TO_OWNER
		thirdPersonProxy.kv.solid = 0
		SetTeam( thirdPersonProxy, player.GetTeam() )
		thirdPersonProxy.SetOwner( player )
		thirdPersonProxy.SetSkin( player.GetSkin() )
		thirdPersonProxy.SetCamo( player.GetCamo() )
		thirdPersonProxy.SetDecal( player.GetDecal() )
		DispatchSpawn( thirdPersonProxy )
		if ( thirdPersonProxy.GetModelName() != player.GetModelName() )
			thirdPersonProxy.SetModel( player.GetModelName() )
		thirdPersonProxy.SetInvulnerable()
		thirdPersonProxy.EnableNPCFlag( NPC_IGNORE_ALL )
		NPC_NoTarget( thirdPersonProxy )
		SetTeam( thirdPersonProxy, player.GetTeam() )
		thirdPersonProxy.SetSkin( player.GetSkin() )
		thirdPersonProxy.SetCamo( player.GetCamo() )
		thirdPersonProxy.SetDecal( player.GetDecal() )
		if ( thirdPersonProxy.GetMainWeapons().len() != 0 )
			TakeWeaponsForArray( thirdPersonProxy, thirdPersonProxy.GetMainWeapons() )
		thirdPersonProxy.SetBossPlayer( player )
		if ( player.IsTitan() )
		{
			entity thirdPersonProxysoul = thirdPersonProxy.GetTitanSoul()
			if ( IsValid( thirdPersonProxysoul ) )
				thirdPersonProxysoul.SetShieldHealth( thirdPersonProxysoul.GetShieldHealthMax() )
		}
		else
		{
			AddAnimEvent( thirdPersonProxy, "phase_shift_start", ModdedPhaseEmbarkPhaseStart )
			AddAnimEvent( thirdPersonProxy, "phase_shift_stop", ModdedPhaseEmbarkPhaseStop )
			if ( !IsPlayerEmbarking( player ) )
			{
				AddAnimEvent( thirdPersonProxy, "phase_shift_explode", ModdedPhaseShiftExplodeSound )
				AddAnimEvent( thirdPersonProxy, "cloak_on", ModdedAnimEvent_Cloak_On )
				AddAnimEvent( thirdPersonProxy, "cloak_off", ModdedAnimEvent_Cloak_Off )
			}
		}
		HideName( thirdPersonProxy )
		if ( player.IsTitan() )
			Highlight_SetEnemyHighlight( thirdPersonProxy, "enemy_titan" )
		else
			Highlight_SetEnemyHighlight( thirdPersonProxy, "enemy_player" )

		if ( player.IsTitan() )
		{
			DisableTitanRodeo( thirdPersonProxy )
			DisableTitanRodeo( ownerProxy )
		}
		thread SetBodyGroups( player, thirdPersonProxy )
		FirstPersonPlayAnim( sequence, thirdPersonProxy, player, other )
	}
	cleanupData.thirdPersonProxy = thirdPersonProxy

	entity camera = CreateEntity( "point_viewcontrol" )
	if ( IsValid( ownerProxy ) )
		camera.SetParent( ownerProxy, attachment )
	camera.kv.spawnflags = 56
	DispatchSpawn( camera )
	player.SetViewEntity( camera, true )
	cleanupData.camera = camera
	if ( player.GetModelName() == $"models/titans/buddy/titan_buddy.mdl" )
		camera.SetOrigin( <52, 0, -22> )
	else if ( player.GetModelName() == $"models/robots/spectre/imc_spectre.mdl" )
		camera.SetOrigin( <3, 0, 0> )

	Remote_CallFunction_NonReplay( player, "ServerCallback_HideHudForFPHackAnim" )
	thread CleanupForced1PSequenceAfterAnimDone( sequence, ownerProxy, other, cleanupData )
	return cleanupData
}

void function CleanupForced1PSequenceAfterAnimDone( FirstPersonSequenceStruct sequence, entity player, entity other, Forced1PSequenceData cleanupData )
{
    if ( !IsValid( player ) )
	    return
    player.EndSignal( "OnDeath" )
	player.EndSignal( "OnDestroy" )
	player.EndSignal( "OnAnimationInterrupted" )
	player.EndSignal( "OnAnimationDone" )
    cleanupData.player.EndSignal( "OnDeath" )
	cleanupData.player.EndSignal( "OnDestroy" )
	cleanupData.player.EndSignal( "OnAnimationInterrupted" )
	OnThreadEnd( function() : ( cleanupData )
	{
		thread CleanupForced1PSequence( cleanupData )
	})
	FirstPersonPlayAnim( sequence, player, cleanupData.player, other )
	WaitFrame()
	while ( player.Anim_IsActive() )
	    WaitFrame()
}

void function CleanupForced1PSequence( Forced1PSequenceData cleanupData )
{
	if ( IsValid( cleanupData.ownerProxy ) )
		SetTeam( cleanupData.ownerProxy, 1 )

	if ( IsValid( cleanupData.thirdPersonProxy ) )
		SetTeam( cleanupData.thirdPersonProxy, 1 )

	WaitFrame() // Prevent tether traps parenting to proxies when they get destroyed

    if ( IsValid( cleanupData.player ) )
	{
	    cleanupData.player.Show()
	    cleanupData.player.ClearViewEntity()
	    ClearPlayerAnimViewEntity( cleanupData.player )
	}

	if ( IsValid( cleanupData.camera ) )
	    cleanupData.camera.Destroy()

	if ( IsValid( cleanupData.ownerProxy ) )
	    cleanupData.ownerProxy.Destroy()

	if ( IsValid( cleanupData.thirdPersonProxy ) )
	    cleanupData.thirdPersonProxy.Destroy()
}

void function SetBodyGroups( entity player, entity proxy )
{
    player.EndSignal( "OnDestroy" )
    proxy.EndSignal( "OnDestroy" )
    player.EndSignal( "OnDeath" )
    proxy.EndSignal( "OnDeath" )
    while ( true )
    {
        proxy.SetFullBodygroup( player.GetFullBodygroup() )
        WaitFrame()
    }
}

void function FirstPersonPlayAnim( FirstPersonSequenceStruct sequence, entity proxy, entity player, entity other )
{
    bool saveednoparent = sequence.noParent
    string savedattachment = sequence.attachment
    bool saveduseanimatedrefattachment = sequence.useAnimatedRefAttachment
    if ( !IsPlayerEmbarking( player ) )
    {
        sequence.noParent = false
        sequence.attachment = "REF"
        sequence.useAnimatedRefAttachment = true
        thread FirstPersonSequence( sequence, proxy, player )
    }
    else
        thread FirstPersonSequence( sequence, proxy, other )
    sequence.noParent = saveednoparent
    sequence.attachment = savedattachment
    sequence.useAnimatedRefAttachment = saveduseanimatedrefattachment
}

void function OnClientConnected( entity player )
{
	if ( !GetCurrentPlaylistVarInt( "fp_embark_enabled", 0 ) || !GetConVarInt( "fp_executions_disable_enabled" ) )
	    return

	Chat_ServerPrivateMessage( player, "[38;2;0;140;245m[FP Executions][111m " + "This Server Uses FP Executions", false, false )
	Chat_ServerPrivateMessage( player, "[38;2;0;140;245m[FP Executions][111m " + "To Enable FP Executions Use ?enablefpexecutions", false, false )
	Chat_ServerPrivateMessage( player, "[38;2;0;140;245m[FP Executions][111m " + "To Disable FP Executions Use ?disablefpexecutions", false, false )
}

ClServer_MessageStruct function ChatCallback( ClServer_MessageStruct message ) 
{
	string msg = message.message.tolower()
	if ( msg.len() == 0 || !GetCurrentPlaylistVarInt( "fp_embark_enabled", 0 ) || !GetConVarInt( "fp_executions_disable_enabled" ) )
		return message

	if ( format("%c", msg[0]) == "?" ) 
	{
		array<string> msgParts = split( msg, " " )
		string command = msgParts[0].tolower()
		string disableduids = GetConVarString( "fp_executions_disabled_uids" )
		
		if ( command == "?enablefpexecutions" )
		{
			message.shouldBlock = true
            if ( !split( GetConVarString( "fp_executions_disabled_uids" ), "," ).contains( message.player.GetUID() ) )
			{
			    Chat_ServerPrivateMessage( message.player, "[38;2;0;140;245m[FP Executions][111m " + "FP Executions Are Already Enabled", false, false )
				return message
			}
			if ( disableduids == "" )
			    return message
			if ( disableduids != message.player.GetUID() )
			    disableduids = StringReplace( disableduids, "," + message.player.GetUID(), "" )
			else
			    disableduids = ""
			Chat_ServerPrivateMessage( message.player, "[38;2;0;140;245m[FP Executions][111m " + "Enabled FP Executions", false, false )
		}
		else if ( command == "?disablefpexecutions" )
		{
			message.shouldBlock = true
            if ( split( GetConVarString( "fp_executions_disabled_uids" ), "," ).contains( message.player.GetUID() ) )
			{
			    Chat_ServerPrivateMessage( message.player, "[38;2;0;140;245m[FP Executions][111m " + "FP Executions Are Already Disabled", false, false )
				return message
			}
			if ( disableduids == "" )
			    disableduids = message.player.GetUID()
			else
			    disableduids += "," + message.player.GetUID()
			Chat_ServerPrivateMessage( message.player, "[38;2;0;140;245m[FP Executions][111m " + "Disabled FP Executions", false, false )
		}
		if ( disableduids != GetConVarString( "fp_executions_disabled_uids" ) )
		    SetConVarString( "fp_executions_disabled_uids", disableduids )
	}
	return message
}
#endif

#if CLIENT
void function ServerCallback_HideHudForFPHackAnim()
{
	int ruiDrawIsEnabled = GetConVarInt( "rui_drawEnable" )

	if ( ruiDrawIsEnabled == 0 )
	    return

    SetConVarInt( "rui_drawEnable", 0 )	
	thread EnableHudOnViewRestored( ruiDrawIsEnabled )
}

void function EnableHudOnViewRestored( int ruiDrawIsEnabled = 1 )
{
	while ( GetViewEntity() != GetLocalClientPlayer() )
		WaitFrame()

	SetConVarInt( "rui_drawEnable", ruiDrawIsEnabled )
}
#endif

// Anim events down here

#if SERVER
void function ModdedPhaseEmbarkPhaseStart( entity player )
{
	PlayPhaseShiftDisappearFX( player )
	EmitSoundOnEntity( player, "pilot_phaseembark_activate_3p" )	
	player.PhaseShiftBegin( 0.0, 0.2 )

	if ( !IsPlayerEmbarking( player.GetOwner() ) )
	{
		player.GetOwner().PhaseShiftBegin( 0.0, 1.5 )
		AddAnimEvent( player.GetOwner(), "phase_shift_stop", ModdedPhaseEmbarkPhaseStop )
		thread ModdedPhaseExecutionPhaseCleanup( player.GetOwner() )
	}
	
	thread ModdedPhaseEmbarkPhaseCleanup( player )
}

void function ModdedPhaseEmbarkPhaseCleanup( entity player )
{
	EndSignal( player, "OnDeath" )

	OnThreadEnd(
	function() : ( player )
		{
			if ( IsValid( player ) && player.GetModelName() != $"models/robots/spectre/imc_spectre.mdl" && player.GetModelName() != $"models/titans/buddy/titan_buddy.mdl" )
	   			player.SetBodygroup( player.FindBodyGroup( "head" ), 1 )
		}
	)

	WaitSignal( player, "PhaseEmbarkPhaseStop" )
}

void function ModdedPhaseExecutionPhaseCleanup( entity player )
{
	EndSignal( player, "OnDeath" )

	OnThreadEnd(
	function() : ( player )
		{
			if ( IsValid( player ) )
	   			player.Hide()
		}
	)

	WaitSignal( player, "PhaseEmbarkPhaseStop" )
}

void function ModdedPhaseEmbarkPhaseStop( entity player )
{
	Signal( player, "PhaseEmbarkPhaseStop" )
	PlayPhaseShiftDisappearFX( player )
	EmitSoundOnEntity( player, "pilot_phaseembark_end_3p" )
	player.PhaseShiftCancel()
}

void function ModdedPhaseShiftExplodeSound( entity ent )
{
	if ( ent.IsMechanical() )
	{
		EmitSoundOnEntity( ent, "Pilot_Mvmt_Execution_Phaseshift_Pt4_Explo_Robo_3P" )
	}
	else
	{
		EmitSoundOnEntity( ent, "Pilot_Mvmt_Execution_Phaseshift_Pt4_Explo_3P" )
	}
}

void function ModdedAnimEvent_Cloak_On( entity player )
{
	EmitSoundOnEntity( player, "cloak_on_3P" )
	EmitSoundOnEntity( player, "cloak_sustain_loop_3P" )

	float cloakDuration = 1.5 - 0.35
    
    player.SetCanCloak( true )

	player.SetCloakDuration( 0.35, cloakDuration, 1.0 )
}

void function ModdedAnimEvent_Cloak_Off( entity player )
{
	StopSoundOnEntity( player, "cloak_sustain_loop_1P" )
	StopSoundOnEntity( player, "cloak_sustain_loop_3P" )

	bool wasCloaked = player.IsCloaked( CLOAK_INCLUDE_FADE_IN_TIME )

	if ( wasCloaked )
	{
		EmitSoundOnEntity( player, "cloak_interruptend_3P" )

		StopSoundOnEntity( player, "cloak_warningtoend_1P" )
		StopSoundOnEntity( player, "cloak_warningtoend_3P" )
	}

	player.SetCloakDuration( 0, 0, 0.35 )
}
#endif